{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Elizabeth Mun\\\\Documents\\\\Projects\\\\realtime-chat-app\\\\pages\\\\components\\\\Chat.js\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component, Fragment } from \"react\";\nimport axios from \"axios\";\nimport Pusher from \"pusher-js\";\nimport ChatMessage from \"./ChatMessage\";\nconst SAD_EMOJI = [55357, 56864];\nconst HAPPY_EMOJI = [55357, 56832];\nconst NEUTRAL_EMOJI = [55357, 56848];\n\nclass Chat extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      chats: []\n    });\n\n    _defineProperty(this, \"handleKeyUp\", evt => {\n      const value = evt.target.value;\n\n      if (evt.keyCode === 13 && !evt.shiftKey) {\n        const {\n          activeUser: user\n        } = this.props;\n        const chat = {\n          user,\n          message: value,\n          timestamp: +new Date()\n        };\n        evt.target.value = \"\";\n        axios.post(\"/message\", chat);\n      }\n    });\n  }\n\n  componentDidMount() {\n    this.pusher = new Pusher(process.env.PUSHER_APP_KEY, {\n      cluster: process.env.PUSHER_APP_CLUSTER,\n      encrypted: true\n    });\n    this.channel = this.pusher.subscribe(\"chat-room\");\n    this.channel.bind(\"new-message\", ({\n      chat = null\n    }) => {\n      const {\n        chats\n      } = this.state;\n      chat && chats.push(chat);\n      this.setState({\n        chats\n      });\n    });\n    this.pusher.connection.bind(\"connected\", () => {\n      axios.post(\"/messages\").then(response => {\n        const chats = response.data.messages;\n        this.setState({\n          chats\n        });\n      });\n    });\n  }\n\n  render() {\n    return this.props.activeUser && /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"border-bottom border-gray w-100 d-flex align-items-center bg-white\",\n        style: {\n          height: 90\n        },\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-dark mb-0 mx-4 px-2\",\n          children: this.props.activeUser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"px-4 pb-4 w-100 d-flex flex-row flex-wrap align-items-start align-content-start position-relative\",\n        style: {\n          height: \"calc(100% - 180px)\",\n          overflowY: \"scroll\"\n        },\n        children: this.state.chats.map((chat, index) => {\n          const previous = Math.max(0, index - 1);\n          const previousChat = this.state.chats[previous];\n          const position = chat.user === this.props.activeUser ? \"right\" : \"left\";\n          const isFirst = previous === index;\n          const inSequence = chat.user === previousChat.user;\n          const hasDelay = Math.ceil((chat.timestamp - previousChat.timestamp) / (1000 * 60)) > 1;\n          const mood = chat.sentiment > 0 ? HAPPY_EMOJI : chat.sentiment === 0 ? NEUTRAL_EMOJI : SAD_EMOJI;\n          return /*#__PURE__*/_jsxDEV(Fragment, {\n            children: [(isFirst || !inSequence || hasDelay) && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `d-block w-100 font-weight-bold text-dark mt-4 pb-1 px-1 text-${position}`,\n              style: {\n                fontSize: \"0.9rem\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"d-block\",\n                style: {\n                  fontSize: \"1.6rem\"\n                },\n                children: String.fromCodePoint(...mood)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: chat.user || \"Anonymous\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(ChatMessage, {\n              message: chat.message,\n              position: position\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"border-top border-gray w-100 px-4 d-flex align-items-center bg-light\",\n        style: {\n          minHeight: 90\n        },\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"form-control px-3 py-2\",\n          onKeyUp: this.handleKeyUp,\n          placeholder: \"Enter a chat message\",\n          style: {\n            resize: \"none\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this);\n  }\n\n  componentWillUnmount() {\n    this.pusher.disconnect();\n  }\n\n}\n\nexport default Chat;","map":{"version":3,"sources":["C:/Users/Elizabeth Mun/Documents/Projects/realtime-chat-app/pages/components/Chat.js"],"names":["React","Component","Fragment","axios","Pusher","ChatMessage","SAD_EMOJI","HAPPY_EMOJI","NEUTRAL_EMOJI","Chat","chats","evt","value","target","keyCode","shiftKey","activeUser","user","props","chat","message","timestamp","Date","post","componentDidMount","pusher","process","env","PUSHER_APP_KEY","cluster","PUSHER_APP_CLUSTER","encrypted","channel","subscribe","bind","state","push","setState","connection","then","response","data","messages","render","height","overflowY","map","index","previous","Math","max","previousChat","position","isFirst","inSequence","hasDelay","ceil","mood","sentiment","fontSize","String","fromCodePoint","minHeight","handleKeyUp","resize","componentWillUnmount","disconnect"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\";\r\nimport axios from \"axios\";\r\nimport Pusher from \"pusher-js\";\r\nimport ChatMessage from \"./ChatMessage\";\r\n\r\nconst SAD_EMOJI = [55357, 56864];\r\nconst HAPPY_EMOJI = [55357, 56832];\r\nconst NEUTRAL_EMOJI = [55357, 56848];\r\nclass Chat extends Component {\r\n  state = { chats: [] };\r\n\r\n  componentDidMount() {\r\n    this.pusher = new Pusher(process.env.PUSHER_APP_KEY, {\r\n      cluster: process.env.PUSHER_APP_CLUSTER,\r\n      encrypted: true,\r\n    });\r\n\r\n    this.channel = this.pusher.subscribe(\"chat-room\");\r\n\r\n    this.channel.bind(\"new-message\", ({ chat = null }) => {\r\n      const { chats } = this.state;\r\n      chat && chats.push(chat);\r\n      this.setState({ chats });\r\n    });\r\n\r\n    this.pusher.connection.bind(\"connected\", () => {\r\n      axios.post(\"/messages\").then((response) => {\r\n        const chats = response.data.messages;\r\n        this.setState({ chats });\r\n      });\r\n    });\r\n  }\r\n  handleKeyUp = (evt) => {\r\n    const value = evt.target.value;\r\n\r\n    if (evt.keyCode === 13 && !evt.shiftKey) {\r\n      const { activeUser: user } = this.props;\r\n      const chat = { user, message: value, timestamp: +new Date() };\r\n\r\n      evt.target.value = \"\";\r\n      axios.post(\"/message\", chat);\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      this.props.activeUser && (\r\n        <Fragment>\r\n          <div\r\n            className=\"border-bottom border-gray w-100 d-flex align-items-center bg-white\"\r\n            style={{ height: 90 }}\r\n          >\r\n            <h2 className=\"text-dark mb-0 mx-4 px-2\">\r\n              {this.props.activeUser}\r\n            </h2>\r\n          </div>\r\n          <div\r\n            className=\"px-4 pb-4 w-100 d-flex flex-row flex-wrap align-items-start align-content-start position-relative\"\r\n            style={{ height: \"calc(100% - 180px)\", overflowY: \"scroll\" }}\r\n          >\r\n            {this.state.chats.map((chat, index) => {\r\n              const previous = Math.max(0, index - 1);\r\n              const previousChat = this.state.chats[previous];\r\n              const position =\r\n                chat.user === this.props.activeUser ? \"right\" : \"left\";\r\n\r\n              const isFirst = previous === index;\r\n              const inSequence = chat.user === previousChat.user;\r\n              const hasDelay =\r\n                Math.ceil(\r\n                  (chat.timestamp - previousChat.timestamp) / (1000 * 60)\r\n                ) > 1;\r\n\r\n              const mood =\r\n                chat.sentiment > 0\r\n                  ? HAPPY_EMOJI\r\n                  : chat.sentiment === 0\r\n                  ? NEUTRAL_EMOJI\r\n                  : SAD_EMOJI;\r\n\r\n              return (\r\n                <Fragment key={index}>\r\n                  {(isFirst || !inSequence || hasDelay) && (\r\n                    <div\r\n                      className={`d-block w-100 font-weight-bold text-dark mt-4 pb-1 px-1 text-${position}`}\r\n                      style={{ fontSize: \"0.9rem\" }}\r\n                    >\r\n                      <span className=\"d-block\" style={{ fontSize: \"1.6rem\" }}>\r\n                        {String.fromCodePoint(...mood)}\r\n                      </span>\r\n                      <span>{chat.user || \"Anonymous\"}</span>\r\n                    </div>\r\n                  )}\r\n\r\n                  <ChatMessage message={chat.message} position={position} />\r\n                </Fragment>\r\n              );\r\n            })}\r\n          </div>\r\n          <div\r\n            className=\"border-top border-gray w-100 px-4 d-flex align-items-center bg-light\"\r\n            style={{ minHeight: 90 }}\r\n          >\r\n            <textarea\r\n              className=\"form-control px-3 py-2\"\r\n              onKeyUp={this.handleKeyUp}\r\n              placeholder=\"Enter a chat message\"\r\n              style={{ resize: \"none\" }}\r\n            ></textarea>\r\n          </div>\r\n        </Fragment>\r\n      )\r\n    );\r\n  }\r\n  componentWillUnmount() {\r\n    this.pusher.disconnect();\r\n  }\r\n}\r\n\r\nexport default Chat;\r\n"]},"metadata":{},"sourceType":"module"}