{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _classCallCheck from \"C:/Users/Elizabeth Mun/Documents/Projects/realtime-chat-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/Elizabeth Mun/Documents/Projects/realtime-chat-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:/Users/Elizabeth Mun/Documents/Projects/realtime-chat-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:/Users/Elizabeth Mun/Documents/Projects/realtime-chat-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"C:/Users/Elizabeth Mun/Documents/Projects/realtime-chat-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:/Users/Elizabeth Mun/Documents/Projects/realtime-chat-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"C:/Users/Elizabeth Mun/Documents/Projects/realtime-chat-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\Elizabeth Mun\\\\Documents\\\\Projects\\\\realtime-chat-app\\\\pages\\\\components\\\\Chat.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component, Fragment } from \"react\";\nimport axios from \"axios\";\nimport Pusher from \"pusher-js\";\n\nvar Chat = /*#__PURE__*/function (_Component) {\n  _inherits(Chat, _Component);\n\n  var _super = _createSuper(Chat);\n\n  function Chat() {\n    var _this;\n\n    _classCallCheck(this, Chat);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      chats: []\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleKeyUp\", function (evt) {\n      var value = evt.target.value;\n\n      if (evt.keyCode === 13 && !evt.shiftKey) {\n        var user = _this.props.activeUser;\n        var chat = {\n          user: user,\n          message: value,\n          timestamp: +new Date()\n        };\n        evt.target.value = '';\n        axios.post('/message', chat);\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(Chat, [{\n    key: \"render\",\n    value: function render() {\n      return this.props.activeUser && /*#__PURE__*/_jsxDEV(Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"border-bottom border-gray w-100 d-flex align-items-center bg-white\",\n          style: {\n            height: 90\n          },\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-dark mb-0 mx-4 px-2\",\n            children: this.props.activeUser\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"border-top border-gray w-100 px-4 d-flex align-items-center bg-light\",\n          style: {\n            minHeight: 90\n          },\n          children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"form-control px-3 py-2\",\n            onKeyUp: this.handleKeyUp,\n            placeholder: \"Enter a chat message\",\n            style: {\n              resize: 'none'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 38\n      }, this);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.pusher = new Pusher(process.env.PUSHER_APP_KEY, {\n        cluster: process.env.PUSHER_APP_CLUSTER,\n        encrypted: true\n      });\n      this.channel = this.pusher.subscribe(\"chat-room\");\n      this.channel.bind(\"new-message\", function (_ref) {\n        var _ref$chat = _ref.chat,\n            chat = _ref$chat === void 0 ? null : _ref$chat;\n        var chats = _this2.state.chats;\n        chat && chats.push(chat);\n\n        _this2.setState({\n          chats: chats\n        });\n      });\n      this.pusher.connection.bind(\"connected\", function () {\n        axios.post(\"/messages\").then(function (response) {\n          var chats = response.data.messages;\n\n          _this2.setState({\n            chats: chats\n          });\n        });\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.pusher.disconnect();\n    }\n  }]);\n\n  return Chat;\n}(Component);\n\nexport default Chat;","map":{"version":3,"sources":["C:/Users/Elizabeth Mun/Documents/Projects/realtime-chat-app/pages/components/Chat.js"],"names":["React","Component","Fragment","axios","Pusher","Chat","chats","evt","value","target","keyCode","shiftKey","user","props","activeUser","chat","message","timestamp","Date","post","height","minHeight","handleKeyUp","resize","pusher","process","env","PUSHER_APP_KEY","cluster","PUSHER_APP_CLUSTER","encrypted","channel","subscribe","bind","state","push","setState","connection","then","response","data","messages","disconnect"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\";\r\nimport axios from \"axios\";\r\nimport Pusher from \"pusher-js\";\r\n\r\nclass Chat extends Component {\r\n  state = { chats: [] };\r\n  handleKeyUp = evt => {\r\n    const value = evt.target.value;\r\n    \r\n    if (evt.keyCode === 13 && !evt.shiftKey) {\r\n      const { activeUser: user } = this.props;\r\n      const chat = { user, message: value, timestamp: +new Date };\r\n      \r\n      evt.target.value = '';\r\n      axios.post('/message', chat);\r\n    }\r\n  }\r\n  \r\n  render() {\r\n    return (this.props.activeUser && <Fragment>\r\n    \r\n      <div className=\"border-bottom border-gray w-100 d-flex align-items-center bg-white\" style={{ height: 90 }}>\r\n        <h2 className=\"text-dark mb-0 mx-4 px-2\">{this.props.activeUser}</h2>\r\n      </div>\r\n      \r\n      <div className=\"border-top border-gray w-100 px-4 d-flex align-items-center bg-light\" style={{ minHeight: 90 }}>\r\n        <textarea className=\"form-control px-3 py-2\" onKeyUp={this.handleKeyUp} placeholder=\"Enter a chat message\" style={{ resize: 'none' }}></textarea>\r\n      </div>\r\n      \r\n    </Fragment> )\r\n  }\r\n  componentDidMount() {\r\n    this.pusher = new Pusher(process.env.PUSHER_APP_KEY, {\r\n      cluster: process.env.PUSHER_APP_CLUSTER,\r\n      encrypted: true,\r\n    });\r\n\r\n    this.channel = this.pusher.subscribe(\"chat-room\");\r\n\r\n    this.channel.bind(\"new-message\", ({ chat = null }) => {\r\n      const { chats } = this.state;\r\n      chat && chats.push(chat);\r\n      this.setState({ chats });\r\n    });\r\n\r\n    this.pusher.connection.bind(\"connected\", () => {\r\n      axios.post(\"/messages\").then((response) => {\r\n        const chats = response.data.messages;\r\n        this.setState({ chats });\r\n      });\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.pusher.disconnect();\r\n  }\r\n}\r\n\r\n\r\nexport default Chat;\r\n"]},"metadata":{},"sourceType":"module"}