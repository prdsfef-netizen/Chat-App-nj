{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _classCallCheck from \"C:/Users/Elizabeth Mun/Documents/Projects/realtime-chat-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/Elizabeth Mun/Documents/Projects/realtime-chat-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:/Users/Elizabeth Mun/Documents/Projects/realtime-chat-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:/Users/Elizabeth Mun/Documents/Projects/realtime-chat-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"C:/Users/Elizabeth Mun/Documents/Projects/realtime-chat-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:/Users/Elizabeth Mun/Documents/Projects/realtime-chat-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"C:/Users/Elizabeth Mun/Documents/Projects/realtime-chat-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\Elizabeth Mun\\\\Documents\\\\Projects\\\\realtime-chat-app\\\\pages\\\\components\\\\Chat.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component, Fragment } from \"react\";\nimport axios from \"axios\";\nimport Pusher from \"pusher-js\";\nimport ChatMessage from './ChatMessage';\nvar SAD_EMOJI = [55357, 56864];\nvar HAPPY_EMOJI = [55357, 56832];\nvar NEUTRAL_EMOJI = [55357, 56848];\n\nvar Chat = /*#__PURE__*/function (_Component) {\n  _inherits(Chat, _Component);\n\n  var _super = _createSuper(Chat);\n\n  function Chat() {\n    var _this;\n\n    _classCallCheck(this, Chat);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      chats: []\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleKeyUp\", function (evt) {\n      var value = evt.target.value;\n\n      if (evt.keyCode === 13 && !evt.shiftKey) {\n        var user = _this.props.activeUser;\n        var chat = {\n          user: user,\n          message: value,\n          timestamp: +new Date()\n        };\n        evt.target.value = '';\n        axios.post('/message', chat);\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(Chat, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.pusher = new Pusher(process.env.PUSHER_APP_KEY, {\n        cluster: process.env.PUSHER_APP_CLUSTER,\n        encrypted: true\n      });\n      this.channel = this.pusher.subscribe(\"chat-room\");\n      this.channel.bind(\"new-message\", function (_ref) {\n        var _ref$chat = _ref.chat,\n            chat = _ref$chat === void 0 ? null : _ref$chat;\n        var chats = _this2.state.chats;\n        chat && chats.push(chat);\n\n        _this2.setState({\n          chats: chats\n        });\n      });\n      this.pusher.connection.bind(\"connected\", function () {\n        axios.post(\"/messages\").then(function (response) {\n          var chats = response.data.messages;\n\n          _this2.setState({\n            chats: chats\n          });\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return this.props.activeUser && /*#__PURE__*/_jsxDEV(Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"border-bottom border-gray w-100 d-flex align-items-center bg-white\",\n          style: {\n            height: 90\n          },\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-dark mb-0 mx-4 px-2\",\n            children: this.props.activeUser\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"border-top border-gray w-100 px-4 d-flex align-items-center bg-light\",\n          style: {\n            minHeight: 90\n          },\n          children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"form-control px-3 py-2\",\n            onKeyUp: this.handleKeyUp,\n            placeholder: \"Enter a chat message\",\n            style: {\n              resize: 'none'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 42\n      }, this);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.pusher.disconnect();\n    }\n  }]);\n\n  return Chat;\n}(Component);\n\nexport default Chat;","map":{"version":3,"sources":["C:/Users/Elizabeth Mun/Documents/Projects/realtime-chat-app/pages/components/Chat.js"],"names":["React","Component","Fragment","axios","Pusher","ChatMessage","SAD_EMOJI","HAPPY_EMOJI","NEUTRAL_EMOJI","Chat","chats","evt","value","target","keyCode","shiftKey","user","props","activeUser","chat","message","timestamp","Date","post","pusher","process","env","PUSHER_APP_KEY","cluster","PUSHER_APP_CLUSTER","encrypted","channel","subscribe","bind","state","push","setState","connection","then","response","data","messages","height","minHeight","handleKeyUp","resize","disconnect"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\";\r\nimport axios from \"axios\";\r\nimport Pusher from \"pusher-js\";\r\nimport ChatMessage from './ChatMessage';\r\nconst SAD_EMOJI = [55357, 56864];\r\nconst HAPPY_EMOJI = [55357, 56832];\r\nconst NEUTRAL_EMOJI = [55357, 56848];\r\nclass Chat extends Component {\r\n    state = { chats: [] };\r\n\r\n    componentDidMount() {\r\n        this.pusher = new Pusher(process.env.PUSHER_APP_KEY, {\r\n            cluster: process.env.PUSHER_APP_CLUSTER,\r\n            encrypted: true,\r\n        });\r\n\r\n        this.channel = this.pusher.subscribe(\"chat-room\");\r\n\r\n        this.channel.bind(\"new-message\", ({ chat = null }) => {\r\n            const { chats } = this.state;\r\n            chat && chats.push(chat);\r\n            this.setState({ chats });\r\n        });\r\n\r\n        this.pusher.connection.bind(\"connected\", () => {\r\n            axios.post(\"/messages\").then((response) => {\r\n                const chats = response.data.messages;\r\n                this.setState({ chats });\r\n            });\r\n        });\r\n    }\r\n    handleKeyUp = evt => {\r\n        const value = evt.target.value;\r\n\r\n        if (evt.keyCode === 13 && !evt.shiftKey) {\r\n            const { activeUser: user } = this.props;\r\n            const chat = { user, message: value, timestamp: +new Date };\r\n\r\n            evt.target.value = '';\r\n            axios.post('/message', chat);\r\n        }\r\n    }\r\n    render() {\r\n        return (this.props.activeUser && <Fragment>\r\n\r\n            <div className=\"border-bottom border-gray w-100 d-flex align-items-center bg-white\" style={{ height: 90 }}>\r\n                <h2 className=\"text-dark mb-0 mx-4 px-2\">{this.props.activeUser}</h2>\r\n            </div>\r\n\r\n            <div className=\"border-top border-gray w-100 px-4 d-flex align-items-center bg-light\" style={{ minHeight: 90 }}>\r\n                <textarea className=\"form-control px-3 py-2\" onKeyUp={this.handleKeyUp} placeholder=\"Enter a chat message\" style={{ resize: 'none' }}></textarea>\r\n            </div>\r\n\r\n        </Fragment>)\r\n    }\r\n    componentWillUnmount() {\r\n        this.pusher.disconnect();\r\n    }\r\n}\r\n\r\nexport default Chat;\r\n"]},"metadata":{},"sourceType":"module"}